{"version":3,"sources":["node_modules/browser-pack/_prelude.js","web/js/Bootstrap.js","web/js/Camera.js","web/js/Game.js","web/js/Map/Map.js","web/js/Map/TerrainGeometry.js","web/js/Player/Controls.js","web/js/Player/Player.js","web/js/Renderer.js","web/js/Scene.js","web/js/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport scene from './Scene.js';\nimport renderer from './Renderer.js';\nimport map from './Map/Map.js';\nimport game from './Game.js';\n\nwindow.THREE = THREE;\n\n/**\n * @type {Bootstrap}\n */\nlet instance = null;\n\n\n/**\n * @class Bootstrap\n */\nexport default class Bootstrap {\n    /**\n     * @returns {Bootstrap}\n     */\n    constructor() {\n        if(!instance){\n            console.debug('Bootingâ€¦');\n            instance = this;\n\n            this.initialize();\n        }\n\n        return instance;\n    }\n\n    /**\n     */\n    initialize() {\n        window.onload = this.onLoad.bind(this);\n    }\n\n    /**\n     * on window laoded\n     */\n    onLoad() {\n        this.scene = scene;\n        renderer.addAxis();\n\n        this.map = map;\n        this.map.createTerrain(this.onMapLoaded);\n    }\n\n    onMapLoaded() {\n        game.start();\n    }\n}","'use strict';\n\nimport scene from './Scene.js';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol();\n\n\n/**\n * @class Camera\n * @deprecated\n *\n * TODO: move camera to player\n */\nclass Camera {\n    constructor(enforcer) {\n        if(enforcer != singletonEnforcer) throw \"Cannot construct singleton Camera\";\n\n        /**\n         * @type {THREE.PerspectiveCamera}\n         * @private\n         */\n        this._camera = new THREE.PerspectiveCamera(15, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n        this.camera.position.set(0, 30, 50);\n    }\n\n    /**\n     * @returns {Camera}\n     */\n    static get instance() {\n        if(!this[singleton]) {\n            this[singleton] = new Camera(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    update() {\n\n    }\n\n    /**\n     * @returns {THREE.PerspectiveCamera}\n     */\n    get camera() {\n        return this._camera;\n    }\n}\n\nexport default Camera.instance;","'use strict';\nimport scene from './Scene.js';\nimport renderer from './Renderer.js';\nimport camera from './Camera.js';\nimport player from './Player/Player.js';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol()\n\n/**\n * Scene of the Game.\n * Created with PhysiJS\n *\n * @class Scene\n */\nclass Game {\n    constructor(enforcer) {\n        if (enforcer != singletonEnforcer) throw \"Cannot construct singleton Game\";\n    }\n\n    /**\n     * @returns {Game}\n     */\n    static get instance() {\n        if (!this[singleton]) {\n            this[singleton] = new Game(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    /**\n     * Start Game means initialize player, objects,â€¦.\n     */\n    start() {\n        this.clock = new THREE.Clock();\n        this.render();\n        player.initialize();\n    }\n\n    /**\n     * Render Map\n     */\n    render() {\n        let delta = this.clock.getDelta();\n\n        camera.update(); // update camera\n        scene.scene.simulate(); // update physics\n\n        requestAnimationFrame( this.render.bind(this) );\n        renderer.render(); // render map\n    }\n}\n\nexport default Game.instance;","'use strict';\n\nimport scene from './../Scene.js';\nimport camera from './../Camera.js';\nimport TerrainGeometry from './TerrainGeometry.js';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol();\n\n/**\n * @class Map\n */\nclass Map {\n    constructor(enforcer) {\n        if (enforcer != singletonEnforcer) throw 'Cannot construct singleton Map';\n\n        /**\n         * @type {THREE.TerrainGeometry}\n         * @private\n         */\n        this._terrain = null;\n    }\n\n    /**\n     * @returns {Map}\n     */\n    static get instance() {\n        if (!this[singleton]) {\n            this[singleton] = new Map(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    /**\n     * Create Terrain.\n     */\n    createTerrain(onMapLoaded) {\n        this.onMapLoaded = onMapLoaded;\n        this.initTerrain();\n    }\n\n    /**\n     * Initialize TerrainGeometry.\n     */\n    initTerrain() {\n        this.terrrainGeometry = new TerrainGeometry({\n            map: 'map-2'\n        });\n        let groundGeometryLoader = this.terrrainGeometry.createGeometry();\n\n        groundGeometryLoader\n            .then(this.onGeometryGenerated.bind(this));\n    }\n\n    /**\n     * Called after TerrainGeometry is ready.\n     */\n    onGeometryGenerated() {\n        let groundMaterial = Physijs.createMaterial(\n            new THREE.MeshBasicMaterial({\n                wireframe: true\n            }),\n            .8, // high friction\n            .4 // low restitution\n        );\n\n        var ground = new Physijs.HeightfieldMesh(\n            this.terrrainGeometry.groundGeometry,\n            groundMaterial,\n            0, // mass\n            this.terrrainGeometry.mapWidth - 1,\n            this.terrrainGeometry.mapLength - 1\n        );\n        ground.rotation.x = Math.PI / -2;\n        ground.receiveShadow = true;\n        ground.name = 'Ground';\n\n        camera.camera.lookAt(ground.position);\n        scene.scene.add( ground );\n\n        this.onMapLoaded.call(null);\n    }\n\n    /**\n     * @returns {THREE.Mesh}\n     */\n    get terrain() {\n        return this._terrain;\n    }\n}\n\nexport default Map.instance;","'use strict';\n\nexport default class TerrainGeometry {\n    constructor(config) {\n        /**\n         * @type object\n         */\n        this.config = config;\n\n        /**\n         * @type {THREE.PlaneGeometry}\n         * @private\n         */\n        this._groundGeometry = null;\n\n        /**\n         * @type {number}\n         * @private\n         */\n        this._mapWidth = 0;\n\n        /**\n         * @type {number}\n         * @private\n         */\n        this._mapLength = 0;\n\n        return this.promise;\n    }\n\n    /**\n     * Create Geometry for Terrain.\n     *\n     * @returns {Promise}\n     */\n    createGeometry() {\n        return new Promise((resolve, reject) => {\n            this.terrainHeight = THREE.ImageUtils.loadTexture(\n                '/assets/maps/' + this.config.map + '/heightdata.png',\n                undefined,\n                this.onTerrainHeightmapLoaded.bind(this, resolve, reject)\n            );\n        })\n    }\n\n    /**\n     * Called after heihtfield-image is loaded and generates the vertices.\n     *\n     * @param {Promise.resolve} resolve\n     * @param {Promise.reject} reject\n     */\n    onTerrainHeightmapLoaded(resolve, reject) {\n        let heightData = this.getHeightImageData().data;\n        let groundGeometry = new THREE.PlaneGeometry( this.mapWidth, this.mapLength, this.mapWidth - 1, this.mapLength - 1 );\n        let verticesIndex = 0;\n\n        // Calculate Vertice height.\n        for ( var index = 0; index < heightData.length; index += (4) ) {\n            var all = heightData[index]+heightData[index+1]+heightData[index+2];\n\n            // set it to PlaneGeometry\n            groundGeometry.vertices[verticesIndex].z = all/(12*6);\n            verticesIndex++;\n        }\n\n        groundGeometry.computeFaceNormals();\n        groundGeometry.computeVertexNormals();\n\n        this.groundGeometry = groundGeometry;\n\n        resolve();\n    }\n\n    /**\n     * Append Heightfield image to dom.\n     *\n     * @returns {ImageData}\n     */\n    getHeightImageData() {\n        let canvas = document.createElement('canvas');\n        let context = canvas.getContext('2d');\n        this.mapWidth = this.terrainHeight.image.width;\n        this.mapLength = this.terrainHeight.image.height;\n\n        canvas.width = this.mapWidth;\n        canvas.height = this.mapLength;\n\n        context.drawImage(this.terrainHeight.image, 0, 0);\n\n        return context.getImageData(0, 0, this.mapWidth, this.mapLength);\n    }\n\n    /**\n     * @param {THREE.PlaneGeometry} groundGeometry\n     */\n    set groundGeometry(groundGeometry) {\n        this._groundGeometry = groundGeometry;\n    }\n\n    /**\n     * @returns {THREE.PlaneGeometry}\n     */\n    get groundGeometry() {\n        return this._groundGeometry;\n    }\n\n    /**\n     * @param {int} width\n     */\n    set mapWidth(width) {\n        this._mapWidth = width;\n    }\n\n    /**\n     * @returns {int}\n     */\n    get mapWidth() {\n        return this._mapWidth;\n    }\n\n    /**\n     * @param {int} length\n     */\n    set mapLength(length) {\n        this._mapLength = length;\n    }\n\n    /**\n     * @returns {int}\n     */\n    get mapLength() {\n        return this._mapLength;\n    }\n}","'use strict';\n","'use strict';\n\nimport scene from './../Scene.js';\nimport camera from './../Camera.js';\nimport map from './../Map/Map.js';\nimport Controls from './Controls.js';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol();\n\n\n/**\n * @class Player\n */\nclass Player {\n    constructor(enforcer) {\n        if (enforcer != singletonEnforcer) throw \"Cannot construct singleton Player\";\n    }\n\n    /**\n     * @returns {Camera}\n     */\n    static get instance() {\n        if (!this[singleton]) {\n            this[singleton] = new Player(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    /**\n     * Initialize Player.\n     */\n    initialize() {\n        this.appendPlayer();\n    }\n\n    /**\n     * Append player object to scene.\n     */\n    appendPlayer() {\n        console.debug('Generate Playerâ€¦');\n\n        var material = Physijs.createMaterial(\n            new THREE.MeshBasicMaterial({\n                color: 0x888888\n            }),\n            0.8,\n            0.3\n        );\n        var mesh = new Physijs.BoxMesh(\n            new THREE.CubeGeometry(1, 1, 1),\n            material\n        );\n\n        mesh.position.set(10, 10, 0);\n        mesh.setLinearVelocity(new THREE.Vector3(0, 0, 0));\n        mesh.setAngularVelocity(new THREE.Vector3(0, 0, 0));\n        mesh.name = 'player';\n        scene.scene.add(mesh);\n    }\n\n    update() {\n        // update player\n    }\n}\n\nexport default Player.instance;","'use strict';\n\nimport scene from './Scene.js';\nimport camera from './Camera.js';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol()\n\n/**\n * @class Renderer\n */\nclass Renderer {\n    /**\n     * @param {Symbol} enforcer\n     */\n    constructor(enforcer) {\n        if(enforcer != singletonEnforcer) throw \"Cannot construct singleton Renderer\";\n\n        /**\n         * @type {THREE.WebGLRenderer}\n         * @private\n         */\n        this._renderer = new THREE.WebGLRenderer();\n\n        this._renderer.setClearColor(0x000000);\n        this._renderer.setSize(window.innerWidth, window.innerHeight);\n        this._renderer.shadowMapEnabled = true;\n        this._renderer.shadowMapSoft = true;\n    }\n\n    /**\n     * @returns {Renderer}\n     */\n    static get instance() {\n        if(!this[singleton]) {\n            this[singleton] = new Renderer(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    /**\n     * add axis\n     */\n    addAxis() {\n        let axes = new THREE.AxisHelper(200);\n\n        scene.scene.add(axes);\n    }\n\n    /**\n     * render app\n     */\n    render() {\n        document.getElementById('viewport')\n            .appendChild(this.renderer.domElement);\n\n        this.renderer.render(scene.scene, camera.camera);\n    }\n\n    /**\n     * @returns {THREE.WebGLRenderer}\n     */\n    get renderer() {\n        return this._renderer;\n    }\n}\n\nexport default Renderer.instance;","'use strict';\n\n/**\n * @type {Symbol}\n */\nlet singleton = Symbol();\n\n/**\n * @type {Symbol}\n */\nlet singletonEnforcer = Symbol()\n\n/**\n * Scene of the Game.\n * Created with PhysiJS\n *\n * @class Scene\n */\nclass Scene {\n    constructor(enforcer) {\n        if(enforcer != singletonEnforcer) throw \"Cannot construct singleton Scene\";\n\n        Physijs.scripts.worker = '/dist/js/physijs_worker.js';\n        Physijs.scripts.ammo = '/dist/js/ammo.js';\n\n        /**\n         * @type {Physijs.Scene}\n         * @private\n         */\n        window.scene = this._scene = new Physijs.Scene({ fixedTimeStep: 1 / 120 });\n\n        this.scene.setGravity(new THREE.Vector3( 0, -10, 0 ));\n    }\n\n    /**\n     * @returns {Scene}\n     */\n    static get instance() {\n        if(!this[singleton]) {\n            this[singleton] = new Scene(singletonEnforcer);\n        }\n\n        return this[singleton];\n    }\n\n    /**\n     * @returns {THREE.Scene}\n     */\n    get scene() {\n        return this._scene;\n    }\n}\n\nexport default Scene.instance;","'use strict';\n\nimport Bootstrap from './Bootstrap.js';\n\nlet bootstrap = new Bootstrap();"]}