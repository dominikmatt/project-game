<!DOCTYPE html>
<html>
<head>
    <style type="text/css">
        html, body {
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="viewport"></div>
    <script type="text/javascript" src="/dist/js/simplex-noise.js"></script>
    <script type="text/javascript" src="/dist/js/index.js"></script>
    <script id="fragmentShader" type="x-shader/x-vertex"> 
        uniform sampler2D oceanTexture;
        uniform sampler2D sandyTexture;
        uniform sampler2D grassTexture;
        uniform sampler2D rockyTexture;
        uniform sampler2D snowyTexture;

        varying vec2 vUv;
        varying vec3 my_pos;

        void main()
        {
            vec4 ocean = (smoothstep(-100.0, -15.0, my_pos.y) - smoothstep(-15.0, -10.0, my_pos.y)) * texture2D( oceanTexture, vUv * 25.0 );
            vec4 sandy = (smoothstep(-15.0, -10.0, my_pos.y) - smoothstep(-10.0, 15.0, my_pos.y)) * texture2D( sandyTexture, vUv * 25.0 );
            vec4 grass = (smoothstep(-10.0, 15.0, my_pos.y) - smoothstep(14.0, 55.0, my_pos.y)) * texture2D( grassTexture, vUv * 25.0 );
            vec4 rocky = (smoothstep(14.0, 55.0, my_pos.y)) * texture2D( rockyTexture, vUv * 25.0 );
            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0) + ocean + sandy + grass + rocky ; //, 1.0);
        }
    </script>
    <script id="vertexShader" type="x-shader/x-vertex">
        varying vec2 vUv;
        varying vec3 my_pos;

        void main() {
            vUv = uv;
            vec4 pos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
            my_pos = position.xyz;

            gl_Position = projectionMatrix *
                modelViewMatrix *
                vec4(position ,1.0);
        }
    </script>
</body>
</html>